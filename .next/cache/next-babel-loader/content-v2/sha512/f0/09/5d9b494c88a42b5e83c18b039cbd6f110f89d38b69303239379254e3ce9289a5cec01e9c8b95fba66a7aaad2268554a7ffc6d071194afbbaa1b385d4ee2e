{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ana/Documentos/NLW4/NLW4-MoviIt/src/contexts/CountdownContex.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { ChallengesContext } from '../contexts/ChallangesContext';\nexport var CountdownContext = /*#__PURE__*/createContext({});\nvar countdownTimeout;\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isActive = _useState2[0],\n      setActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  function startCountdown() {\n    setActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setActive(false);\n    setTime(0.1 * 60);\n    set;\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      isActive: isActive,\n      resetCountdown: resetCountdown,\n      startCountdown: startCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountdownProvider, \"UMOmaD5vicCMWNiJQgIWozaKGsg=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["/home/ana/Documentos/NLW4/NLW4-MoviIt/src/contexts/CountdownContex.tsx"],"names":["createContext","useContext","useState","useEffect","ChallengesContext","CountdownContext","countdownTimeout","CountdownProvider","children","startNewChallenge","time","setTime","isActive","setActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","startCountdown","resetCountdown","clearTimeout","set","setTimeout"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA6CC,SAA7C,QAAyE,OAAzE;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAeA,OAAO,IAAMC,gBAAgB,gBAAGL,aAAa,CAAE,EAAF,CAAtC;AAEP,IAAIM,gBAAJ;AAEA,OAAO,SAASC,iBAAT,OAAkE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,oBAEzCP,UAAU,CAACG,iBAAD,CAF+B;AAAA,MAE/DK,iBAF+D,eAE/DA,iBAF+D;;AAAA,kBAI/CP,QAAQ,CAAC,MAAM,EAAP,CAJuC;AAAA,MAIhEQ,IAJgE;AAAA,MAI1DC,OAJ0D;;AAAA,mBAKzCT,QAAQ,CAAC,KAAD,CALiC;AAAA,MAKhEU,QALgE;AAAA,MAKtDC,SALsD;;AAAA,mBAMjCX,QAAQ,CAAC,KAAD,CANyB;AAAA,MAMhEY,WANgE;AAAA,MAMnDC,cANmD;;AAQvE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AAEA,WAASU,cAAT,GAA0B;AACxBP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASQ,cAAT,GAA0B;AACxBC,IAAAA,YAAY,CAAChB,gBAAD,CAAZ;AACAO,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,IAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACAY,IAAAA,GAAG;AACJ;;AAEDpB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACxBJ,MAAAA,gBAAgB,GAAGkB,UAAU,CAAC,YAAM;AAClCb,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAF4B,EAE1B,IAF0B,CAA7B;AAGD,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,KAAK,CAAzB,EAA4B;AACjCK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAJ,MAAAA,iBAAiB;AAClB;AACF,GAVQ,EAUN,CAACG,QAAD,EAAWF,IAAX,CAVM,CAAT;AAaA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAChCM,MAAAA,OAAO,EAAPA,OADgC;AAEhCG,MAAAA,OAAO,EAAPA,OAFgC;AAGhCL,MAAAA,WAAW,EAAXA,WAHgC;AAIhCF,MAAAA,QAAQ,EAARA,QAJgC;AAKhCS,MAAAA,cAAc,EAAdA,cALgC;AAMhCD,MAAAA,cAAc,EAAdA;AANgC,KAAlC;AAAA,cAQGZ;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA/CeD,iB;;KAAAA,iB","sourcesContent":["import { createContext, useContext, useState,useEffect, ReactNode } from 'react';\nimport { ChallengesContext } from '../contexts/ChallangesContext';\n\ninterface CountdownContextData {\n  minutes: number,\n  seconds: number,\n  hasFinished: boolean,\n  isActive: boolean,\n  resetCountdown: () => void,\n  startCountdown: () => void,\n}\n\ninterface CountdownProviderProps {\n  children: ReactNode;\n}\n\nexport const CountdownContext = createContext( {} as CountdownContextData);\n\nlet countdownTimeout: NodeJS.Timeout;\n\nexport function CountdownProvider({ children }: CountdownProviderProps)  {\n\n  const { startNewChallenge } = useContext(ChallengesContext);\n\n  const [time, setTime] = useState(0.1 * 60);\n  const [isActive, setActive] = useState(false);\n  const [hasFinished, setHasFinished] = useState(false);\n\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n\n  function startCountdown() {\n    setActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setActive(false);\n    setTime(0.1 * 60);\n    set\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time])\n\n  \n  return(\n    <CountdownContext.Provider value={{\n      minutes,\n      seconds,\n      hasFinished,\n      isActive,\n      resetCountdown,\n      startCountdown,\n    }}>\n      {children}\n    </CountdownContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}