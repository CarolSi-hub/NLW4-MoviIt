{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ana/Documentos/NLW4/NLW4-MoviIt/src/contexts/ChallangesContext.tsx\";\nimport { createContext, useState } from 'react';\nimport challenges from '../../challenges.json';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentXP,\n    1: setCurrentXP\n  } = useState(0);\n  const {\n    0: completedChallenges,\n    1: setCompletedChallenges\n  } = useState(0);\n  const {\n    0: activeChallenge,\n    1: setActiveCHallenge\n  } = useState(null);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveCHallenge;\n  }\n\n  const context = {\n    level,\n    currentXP,\n    completedChallenges,\n    startNewChallenge\n  };\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/ana/Documentos/NLW4/NLW4-MoviIt/src/contexts/ChallangesContext.tsx"],"names":["createContext","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentXP","setCurrentXP","completedChallenges","setCompletedChallenges","activeChallenge","setActiveCHallenge","levelUp","startNewChallenge","randomChallengeIndex","Math","floor","random","length","challenge","context"],"mappings":";;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,OAAO,MAAMC,iBAAiB,gBAAGH,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASI,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAmE;AACxE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM;AAAA,OAACS,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDV,QAAQ,CAAC,CAAD,CAA9D;AACA,QAAM;AAAA,OAACW,eAAD;AAAA,OAAkBC;AAAlB,MAAwCZ,QAAQ,CAAC,IAAD,CAAtD;;AAEA,WAASa,OAAT,GAAmB;AACjBP,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASS,iBAAT,GAA6B;AAC3B,UAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBjB,UAAU,CAACkB,MAAtC,CAA7B;AACA,UAAMC,SAAS,GAAGnB,UAAU,CAACc,oBAAD,CAA5B;AACAH,IAAAA,kBAAkB;AACnB;;AAED,QAAMS,OAAO,GAAE;AACbhB,IAAAA,KADa;AAEbE,IAAAA,SAFa;AAGbE,IAAAA,mBAHa;AAIbK,IAAAA;AAJa,GAAf;AAOA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAGO,OAApC;AAAA,cACCjB;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAKD","sourcesContent":["import { createContext, ReactNode, useState } from 'react';\nimport challenges from '../../challenges.json';\n\nexport const ChallengesContext = createContext({});\n\ninterface ChallangesProviderProps {\n  children: ReactNode;\n}\n\nexport function ChallengesProvider({ children }: ChallangesProviderProps) {\n  const [level, setLevel] = useState(1);\n  const [currentXP, setCurrentXP] = useState(0);\n  const [completedChallenges, setCompletedChallenges] = useState(0);\n  const [activeChallenge, setActiveCHallenge] = useState(null);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveCHallenge\n  }\n\n  const context= {\n    level,\n    currentXP,\n    completedChallenges,\n    startNewChallenge,\n  }\n\n  return (\n    <ChallengesContext.Provider value={ context }>\n    {children}\n    </ ChallengesContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}