{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ana/Documentos/NLW4/NLW4-MoviIt/src/components/Countdown.tsx\";\nimport { useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function Countdown() {\n  const [minuteLeft, minuteRigth] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRigth] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    setActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRigth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRigth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      type: \"button\",\n      className: styles.countdownButton,\n      children: \"End\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountdown,\n        children: \"Suspend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/ana/Documentos/NLW4/NLW4-MoviIt/src/components/Countdown.tsx"],"names":["useEffect","styles","countdownTimeout","Countdown","minuteLeft","minuteRigth","String","minutes","padStart","split","secondLeft","secondRigth","seconds","startCountdown","setActive","resetCountdown","clearTimeout","setTime","isActive","time","setTimeout","setHasFinished","startNewChallenge","countdownContainer","hasFinished","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,SAA+BA,SAA/B,QAAgD,OAAhD;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAqB;AAG1B,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACC,OAAD,CAAN,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BL,MAAM,CAACM,OAAD,CAAN,CAAgBJ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;;AAEA,WAASI,cAAT,GAA0B;AACxBC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASC,cAAT,GAA0B;AACxBC,IAAAA,YAAY,CAACd,gBAAD,CAAZ;AACAY,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAG,IAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACD;;AAEDjB,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGkB,QAAQ,IAAIC,IAAI,GAAG,CAAtB,EAAyB;AACvBjB,MAAAA,gBAAgB,GAAGkB,UAAU,CAAC,MAAI;AAChCH,QAAAA,OAAO,CAACE,IAAI,GAAG,CAAR,CAAP;AACD,OAF4B,EAE1B,IAF0B,CAA7B;AAGD,KAJD,MAIO,IAAID,QAAQ,IAAIC,IAAI,KAAK,CAAzB,EAA4B;AACjCE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAP,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAQ,MAAAA,iBAAiB;AAClB;AACF,GAVQ,EAUN,CAACJ,QAAD,EAAWC,IAAX,CAVM,CAAT;AAYA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACsB,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOnB;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOK;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAYGa,WAAW,gBACZ;AACE,MAAA,QAAQ,MADV;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,SAAS,EAAEvB,MAAM,CAACwB,eAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADY,gBASV;AAAA,gBACMP,QAAQ,gBACR;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAG,GAAEjB,MAAM,CAACwB,eAAgB,IAAGxB,MAAM,CAACyB,qBAAsB,EAFvE;AAGE,QAAA,OAAO,EAAEX,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,gBASN;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAEd,MAAM,CAACwB,eAFpB;AAGE,QAAA,OAAO,EAAEZ,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVR,qBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD","sourcesContent":["import { useContext, useState, useEffect } from 'react';\nimport { ChallengesContext } from '../contexts/ChallangesContext';\nimport styles from '../styles/components/Countdown.module.css'\n\nlet countdownTimeout: NodeJS.Timeout;\n\nexport function Countdown() {\n\n \n  const [minuteLeft, minuteRigth] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRigth] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    setActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setActive(false);\n    setTime(0.1 * 60); \n  }\n\n  useEffect(()=>{\n    if(isActive && time > 0) {\n      countdownTimeout = setTimeout(()=>{\n        setTime(time - 1);\n      }, 1000);     \n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time])\n\n  return(\n    <div>\n      <div className={styles.countdownContainer }>\n        <div>\n          <span>{minuteLeft}</span>\n          <span>{minuteRigth}</span>\n        </div>\n        <span>:</span>\n        <div>\n          <span>{secondLeft}</span>\n          <span>{secondRigth}</span>\n        </div>\n      </div>\n      {hasFinished ? (\n      <button\n        disabled\n          type=\"button\"\n          className={styles.countdownButton}\n        >\n          End\n      </button>\n      ) : (\n        <>\n            { isActive ? (\n              <button\n                type=\"button\"\n                className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n                onClick={resetCountdown}\n              >\n                Suspend\n              </button>\n            ) : (\n                <button\n                  type=\"button\"\n                  className={styles.countdownButton}\n                  onClick={startCountdown}\n                >\n                  Start\n                </button>)\n            } \n        </>\n      )\n      }          \n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}