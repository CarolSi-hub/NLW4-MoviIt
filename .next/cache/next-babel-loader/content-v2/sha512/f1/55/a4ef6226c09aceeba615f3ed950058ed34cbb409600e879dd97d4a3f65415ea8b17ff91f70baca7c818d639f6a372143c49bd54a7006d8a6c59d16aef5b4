{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ana/Documentos/NLW4/NLW4-MoviIt/src/components/Countdown.tsx\";\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(0.1 * 60);\n  const {\n    0: isActive,\n    1: setActive\n  } = useState(false);\n  const {\n    0: hasFinished,\n    1: setHasFinished\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRigth] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRigth] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    setActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setActive(false);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRigth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRigth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      type: \"button\",\n      className: styles.countdownButton,\n      children: \"End\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountdown,\n        children: \"Suspend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/ana/Documentos/NLW4/NLW4-MoviIt/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","countdownTimeout","Countdown","time","setTime","isActive","setActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","minuteLeft","minuteRigth","String","padStart","split","secondLeft","secondRigth","startCountdown","resetCountdown","clearTimeout","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAqB;AAE1B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,MAAM,EAAP,CAAhC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACS,WAAD;AAAA,OAAcC;AAAd,MAAgCV,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMW,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,QAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;AAEA,QAAM,CAACU,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACH,OAAD,CAAN,CAAgBI,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;;AAEA,WAASG,cAAT,GAA0B;AACxBd,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASe,cAAT,GAA0B;AACxBC,IAAAA,YAAY,CAACrB,gBAAD,CAAZ;AACAK,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,IAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACD;;AAEDL,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGM,QAAQ,IAAIF,IAAI,GAAG,CAAtB,EAAyB;AACvBF,MAAAA,gBAAgB,GAAGsB,UAAU,CAAC,MAAI;AAChCnB,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAF4B,EAE1B,IAF0B,CAA7B;AAGD,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,KAAK,CAAzB,EAA4B;AACjCK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GATQ,EASN,CAACD,QAAD,EAAWF,IAAX,CATM,CAAT;AAWA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACwB,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAOX;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAYGZ,WAAW,gBACZ;AACE,MAAA,QAAQ,MADV;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,SAAS,EAAEP,MAAM,CAACyB,eAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADY,gBASV;AAAA,gBACMpB,QAAQ,gBACR;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAG,GAAEL,MAAM,CAACyB,eAAgB,IAAGzB,MAAM,CAAC0B,qBAAsB,EAFvE;AAGE,QAAA,OAAO,EAAEL,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,gBASN;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAErB,MAAM,CAACyB,eAFpB;AAGE,QAAA,OAAO,EAAEL,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVR,qBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport styles from '../styles/components/Countdown.module.css'\n\nlet countdownTimeout: NodeJS.Timeout;\n\nexport function Countdown() {\n\n  const [time, setTime] = useState(0.1 * 60);\n  const [isActive, setActive] = useState(false);\n  const [hasFinished, setHasFinished] = useState(false);\n\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n\n  const [minuteLeft, minuteRigth] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRigth] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    setActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(()=>{\n    if(isActive && time > 0) {\n      countdownTimeout = setTimeout(()=>{\n        setTime(time - 1);\n      }, 1000);     \n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setActive(false);\n    }\n  }, [isActive, time])\n\n  return(\n    <div>\n      <div className={styles.countdownContainer }>\n        <div>\n          <span>{minuteLeft}</span>\n          <span>{minuteRigth}</span>\n        </div>\n        <span>:</span>\n        <div>\n          <span>{secondLeft}</span>\n          <span>{secondRigth}</span>\n        </div>\n      </div>\n      {hasFinished ? (\n      <button\n        disabled\n          type=\"button\"\n          className={styles.countdownButton}\n        >\n          End\n      </button>\n      ) : (\n        <>\n            { isActive ? (\n              <button\n                type=\"button\"\n                className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n                onClick={resetCountdown}\n              >\n                Suspend\n              </button>\n            ) : (\n                <button\n                  type=\"button\"\n                  className={styles.countdownButton}\n                  onClick={startCountdown}\n                >\n                  Start\n                </button>)\n            } \n        </>\n      )\n      }          \n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}