{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ana/Documentos/NLW4/NLW4-MoviIt/src/contexts/ChallangesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentXP = _useState2[0],\n      setCurrentXP = _useState2[1];\n\n  var _useState3 = useState(0),\n      completedChallenges = _useState3[0],\n      setCompletedChallenges = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveCHallenge = _useState4[1];\n\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n  useEffect(function () {\n    Cookies.set('level', level.toString());\n  }, [level, currentXP, completedChallenges]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function completedChallenge() {\n    if (!activeChallenge) return;\n    var amount = activeChallenge.amount;\n    var finalXP = currentXP + amount;\n\n    if (finalXP > experienceToNextLevel) {\n      finalXP -= experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentXP(finalXP);\n    setActiveCHallenge(null);\n    setCompletedChallenges(completedChallenges + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveCHallenge(challenge);\n\n    if (Notification.permission === 'granted') {\n      new Notification('New Challenge!'), {\n        body: \"Valendo \".concat(challenge.amount, \"xp!\")\n      };\n    }\n  }\n\n  function resetChallenge() {\n    setActiveCHallenge(null);\n  }\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentXP: currentXP,\n      completedChallenges: completedChallenges,\n      completedChallenge: completedChallenge,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      experienceToNextLevel: experienceToNextLevel\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"OTg/yzO2VTyyplxugDdZFTWaSpQ=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/ana/Documentos/NLW4/NLW4-MoviIt/src/contexts/ChallangesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentXP","setCurrentXP","completedChallenges","setCompletedChallenges","activeChallenge","setActiveCHallenge","Notification","requestPermission","set","toString","levelUp","completedChallenge","amount","finalXP","experienceToNextLevel","startNewChallenge","randomChallengeIndex","Math","floor","random","length","challenge","permission","body","resetChallenge","pow"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\ninterface ChallangesProviderProps {\n  children: ReactNode;\n}\n\ninterface Challenge {\n  type: 'body' | 'eye';\n  description: string;\n  amount: number;\n}\n\ninterface ChallengesContextData {\n  level: number,\n  currentXP: number,\n  completedChallenges: number,\n  completedChallenge: () => void,\n  activeChallenge: Challenge,\n  startNewChallenge: () => void,\n  resetChallenge: () => void,\n  experienceToNextLevel: number;\n}\n\nexport function ChallengesProvider({ children }: ChallangesProviderProps) {\n  const [level, setLevel] = useState(1);\n  const [currentXP, setCurrentXP] = useState(0);\n  const [completedChallenges, setCompletedChallenges] = useState(0);\n  const [activeChallenge, setActiveCHallenge] = useState(null);\n\n  useEffect(() => {\n    Notification.requestPermission();\n  }, [])\n\n  useEffect(() => {\n    Cookies.set('level', level.toString())\n  },[level, currentXP, completedChallenges])\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function completedChallenge() {\n    if(!activeChallenge) return;\n\n    const { amount } = activeChallenge;\n    let finalXP = currentXP + amount;\n\n    if(finalXP > experienceToNextLevel) {\n      finalXP -= experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentXP(finalXP);\n    setActiveCHallenge(null);\n    setCompletedChallenges(completedChallenges + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveCHallenge(challenge);\n\n    if(Notification.permission === 'granted') {\n      new Notification('New Challenge!'), {\n        body: `Valendo ${challenge.amount}xp!`\n      }\n    }\n  }\n\n  function resetChallenge() {\n    setActiveCHallenge(null);\n  }\n\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n\n  return (\n    <ChallengesContext.Provider value={{\n      level,\n      currentXP,\n      completedChallenges,\n      completedChallenge,\n      startNewChallenge,\n      activeChallenge,\n      resetChallenge,\n      experienceToNextLevel,\n    }}\n    >\n      {children}\n    </ChallengesContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}