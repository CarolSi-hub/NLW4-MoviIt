{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ana/Documentos/NLW4/NLW4-MoviIt/src/contexts/ChallangesContext.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  let {\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const {\n    0: level,\n    1: setLevel\n  } = useState(rest.level ? rest.level : 1);\n  const {\n    0: currentXP,\n    1: setCurrentXP\n  } = useState(rest.currentXP ? rest.currentXP : 0);\n  const {\n    0: completedChallenges,\n    1: setCompletedChallenges\n  } = useState(rest.completedChallenges ? rest.completedChallenges : 0);\n  const {\n    0: activeChallenge,\n    1: setActiveCHallenge\n  } = useState(null);\n  const {\n    0: isLevelUpModalOpen,\n    1: setIsLevelUpModalOpen\n  } = useState(false);\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n  useEffect(() => {\n    Cookies.set('level', level.toString());\n    Cookies.set('currentXP', currentXP.toString());\n    Cookies.set('completedChallenges', completedChallenges.toString());\n  }, [level, currentXP, completedChallenges]);\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelUpModalOpen(true);\n  }\n\n  function completedChallenge() {\n    if (!activeChallenge) return;\n    const {\n      amount\n    } = activeChallenge;\n    let finalXP = currentXP + amount;\n\n    if (finalXP > experienceToNextLevel) {\n      finalXP -= experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentXP(finalXP);\n    setActiveCHallenge(null);\n    setCompletedChallenges(completedChallenges + 1);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelUpModalOpen(false);\n  }\n\n  function resetChallenge() {\n    setActiveCHallenge(null);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveCHallenge(challenge);\n\n    if (Notification.permission === 'granted') {\n      new Notification('New Challenge!'), {\n        body: `Valendo ${challenge.amount}xp!`\n      };\n    }\n\n    new Audio('/notification.mp3').play();\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentXP,\n      completedChallenges,\n      completedChallenge,\n      startNewChallenge,\n      activeChallenge,\n      resetChallenge,\n      experienceToNextLevel,\n      closeLevelUpModal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/ana/Documentos/NLW4/NLW4-MoviIt/src/contexts/ChallangesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentXP","setCurrentXP","completedChallenges","setCompletedChallenges","activeChallenge","setActiveCHallenge","isLevelUpModalOpen","setIsLevelUpModalOpen","experienceToNextLevel","Math","pow","Notification","requestPermission","set","toString","levelUp","completedChallenge","amount","finalXP","closeLevelUpModal","resetChallenge","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","permission","body","Audio","play"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\n\nexport const ChallengesContext = createContext({} as ChallengesContextData);\n\ninterface ChallangesProviderProps {\n  children: ReactNode;\n  level: number,\n  currentXP: number,\n  completedChallenges: number,\n}\n\ninterface Challenge {\n  type: 'body' | 'eye';\n  description: string;\n  amount: number;\n}\n\ninterface ChallengesContextData {\n  level: number,\n  currentXP: number,\n  completedChallenges: number,\n  completedChallenge: () => void,\n  activeChallenge: Challenge,\n  startNewChallenge: () => void,\n  resetChallenge: () => void,\n  experienceToNextLevel: number;\n}\n\nexport function ChallengesProvider({ children, ...rest }: ChallangesProviderProps) {\n\n  const [level, setLevel] = useState(rest.level ? rest.level : 1);\n  const [currentXP, setCurrentXP] = useState(rest.currentXP ? rest.currentXP : 0);\n  const [completedChallenges, setCompletedChallenges] = useState(rest.completedChallenges ? rest.completedChallenges : 0);\n  const [activeChallenge, setActiveCHallenge] = useState(null);\n  const [isLevelUpModalOpen, setIsLevelUpModalOpen] = useState(false);\n\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n\n  useEffect(() => {\n    Notification.requestPermission();\n  }, [])\n\n  useEffect(() => {\n    Cookies.set('level', level.toString());\n    Cookies.set('currentXP', currentXP.toString());\n    Cookies.set('completedChallenges', completedChallenges.toString());\n  },[level, currentXP, completedChallenges])\n\n  function levelUp() {\n    setLevel(level + 1);\n    setIsLevelUpModalOpen(true);\n  }\n\n  function completedChallenge() {\n    if(!activeChallenge) return;\n\n    const { amount } = activeChallenge;\n    let finalXP = currentXP + amount;\n\n    if(finalXP > experienceToNextLevel) {\n      finalXP -= experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentXP(finalXP);\n    setActiveCHallenge(null);\n    setCompletedChallenges(completedChallenges + 1);\n  }\n\n  function closeLevelUpModal() {\n    setIsLevelUpModalOpen(false);\n  }\n\n  function resetChallenge() {\n    setActiveCHallenge(null);\n  } \n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveCHallenge(challenge);\n\n    if(Notification.permission === 'granted') {\n      new Notification('New Challenge!'), {\n        body: `Valendo ${challenge.amount}xp!`\n      }\n    } new Audio('/notification.mp3').play();\n  }  \n\n  return (\n    <ChallengesContext.Provider value={{\n      level,\n      currentXP,\n      completedChallenges,\n      completedChallenge,\n      startNewChallenge,\n      activeChallenge,\n      resetChallenge,\n      experienceToNextLevel,\n      closeLevelUpModal,\n    }}\n    >\n      {children}\n    </ChallengesContext.Provider>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}