{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ana/Documentos/NLW4/NLW4-MoviIt/src/contexts/ChallangesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport challenges from '../../challenges.json';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentXP = _useState2[0],\n      setCurrentXP = _useState2[1];\n\n  var _useState3 = useState(0),\n      completedChallenges = _useState3[0],\n      setCompletedChallenges = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveCHallenge = _useState4[1];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveCHallenge(challenge);\n  }\n\n  var context = {\n    level: level,\n    currentXP: currentXP,\n    completedChallenges: completedChallenges,\n    startNewChallenge: startNewChallenge\n  };\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"BXWmg9bYI7lbTpxuOkg/bCzTXeI=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/ana/Documentos/NLW4/NLW4-MoviIt/src/contexts/ChallangesContext.tsx"],"names":["createContext","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentXP","setCurrentXP","completedChallenges","setCompletedChallenges","activeChallenge","setActiveCHallenge","levelUp","startNewChallenge","randomChallengeIndex","Math","floor","random","length","challenge","context"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,OAAO,IAAMC,iBAAiB,gBAAGH,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASI,kBAAT,OAAmE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAC9CJ,QAAQ,CAAC,CAAD,CADsC;AAAA,MACjEK,KADiE;AAAA,MAC1DC,QAD0D;;AAAA,mBAEtCN,QAAQ,CAAC,CAAD,CAF8B;AAAA,MAEjEO,SAFiE;AAAA,MAEtDC,YAFsD;;AAAA,mBAGlBR,QAAQ,CAAC,CAAD,CAHU;AAAA,MAGjES,mBAHiE;AAAA,MAG5CC,sBAH4C;;AAAA,mBAI1BV,QAAQ,CAAC,IAAD,CAJkB;AAAA,MAIjEW,eAJiE;AAAA,MAIhDC,kBAJgD;;AAMxE,WAASC,OAAT,GAAmB;AACjBP,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASS,iBAAT,GAA6B;AAC3B,QAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBjB,UAAU,CAACkB,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAGnB,UAAU,CAACc,oBAAD,CAA5B;AACAH,IAAAA,kBAAkB,CAACQ,SAAD,CAAlB;AACD;;AAED,MAAMC,OAAO,GAAE;AACbhB,IAAAA,KAAK,EAALA,KADa;AAEbE,IAAAA,SAAS,EAATA,SAFa;AAGbE,IAAAA,mBAAmB,EAAnBA,mBAHa;AAIbK,IAAAA,iBAAiB,EAAjBA;AAJa,GAAf;AAOA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAGO,OAApC;AAAA,cACCjB;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA5BeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, ReactNode, useState } from 'react';\nimport challenges from '../../challenges.json';\n\nexport const ChallengesContext = createContext({});\n\ninterface ChallangesProviderProps {\n  children: ReactNode;\n}\n\nexport function ChallengesProvider({ children }: ChallangesProviderProps) {\n  const [level, setLevel] = useState(1);\n  const [currentXP, setCurrentXP] = useState(0);\n  const [completedChallenges, setCompletedChallenges] = useState(0);\n  const [activeChallenge, setActiveCHallenge] = useState(null);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveCHallenge(challenge)\n  }\n\n  const context= {\n    level,\n    currentXP,\n    completedChallenges,\n    startNewChallenge,\n  }\n\n  return (\n    <ChallengesContext.Provider value={ context }>\n    {children}\n    </ ChallengesContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}