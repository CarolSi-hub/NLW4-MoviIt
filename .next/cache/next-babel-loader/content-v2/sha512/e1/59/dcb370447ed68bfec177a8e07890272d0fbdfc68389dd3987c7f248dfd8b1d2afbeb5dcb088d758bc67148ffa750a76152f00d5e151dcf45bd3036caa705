{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/ana/Documentos/NLW4/NLW4-MoviIt/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/ana/Documentos/NLW4/NLW4-MoviIt/src/contexts/ChallangesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _ref2,\n      _ref3 = _slicedToArray(_ref2, 2),\n      currentXP = _ref3[0],\n      setCurrentXP = _ref3[1];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      levelUp: levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"46A2+t4miPrwdQ+GWuZQeFVSJ0o=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["/home/ana/Documentos/NLW4/NLW4-MoviIt/src/contexts/ChallangesContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currentXP","setCurrentXP","levelUp"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAO,IAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASG,kBAAT,OAAmE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAC9CH,QAAQ,CAAC,CAAD,CADsC;AAAA,MACjEI,KADiE;AAAA,MAC1DC,QAD0D;;AAAA;AAAA;AAAA,MAEjEC,SAFiE;AAAA,MAEtDC,YAFsD;;AAIxE,WAASC,OAAT,GAAmB;AACjBH,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAALA,KAAF;AAASI,MAAAA,OAAO,EAAPA;AAAT,KAAnC;AAAA,cACEL;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAbeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, ReactNode, useState } from 'react';\n\nexport const ChallengesContext = createContext({});\n\ninterface ChallangesProviderProps {\n  children: ReactNode;\n}\n\nexport function ChallengesProvider({ children }: ChallangesProviderProps) {\n  const [level, setLevel] = useState(1);\n  const [currentXP, setCurrentXP]\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return (\n    <ChallengesContext.Provider value={{ level, levelUp }}>\n    { children }\n    </ ChallengesContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}